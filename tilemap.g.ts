// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile17 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile18 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile19 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile20 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile21 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile22 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile23 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile24 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile25 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile26 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile27 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile28 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile29 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile31 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile30 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile32 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile33 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile34 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile35 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile36 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex`3d0020000501010101010101010101010a01010101010a01010101010a01010101010a01010101010a01010101010a01010101010a01010101010a010101010106020909090909090909090909021710101e1c021710101b1c021710101b1c021710101b1c021710101b1c021710101b1c021710101b1c021710101b1c02020909090909090909090909021810101010021810101010021810101010021810101010021810101010021810101010021810101010021810101010020209090909090913090913090210101010100210101010100210101010100210101010100210101010100210101010100210101010100210101010100202090909090909090909090902101010101d02101010101d02101010101d02101010101d02101010101d02101010101d02101010101d02101010101d020209090909090909090909090210101010100210101010100210101010100210101010100210101010100210101010100210101010100210101f1010020209090912090909091209090d01081907010c01081907010c01081907010c01081907010c01081907010c01081907010c01081907010c01081907010be1212090909090909121209090909091309090912121212121212120e111116021010101010101002111514020209090909090909091209090e11151112120912090909090909090909090909091212091309121212121212121111110e1010101010101002111111020211111111141111161111111111111112091309120909090909091209090909090912120912121212121212121511111010101010101010021111160202111111151111111114111111141111121209120912090909091209121209090912091209121212121209121214111110101010101010100211141102021116141111111115141111111116111212090912121209130909121209090909090909091212121212131212161111101010101010101002111114020209090909090909090909090f11111112120909091212090909090909090913090909091212121212121212121114110f101010101010100211111102020909090909090909120909021111110f1212121212120909090909121212121212120912121212121212120f111611021010101010101002111511020212091309090909121309090211111102121212131209091212090909090909090909091212121212121212021111110210101010101010021111110202090912091309090909090902111411021212121212121212131212121212121212121312121212121212120211141502101010101010100211141102020909090909090909090909021111110301010812121212121212121212121212121212121212121207010104111111030101010101010104111614020209090909090909120909090211161111111111111111111116111111111111111111111116111111111111111111111111111111111111111115110202090909091209091209090902111411111111111614111111111411151111111416111514111111111111111111141111111111111111141111141102020909130909091309090909021111111511141111111111111111111111111111111111111111151111111116111115111111141111111111111111020209090909090909090909090d010101010101010810101007010101010101010a01081a07010a010101081a1a070101010a010101081a1a070101010bc010101010101010101010101010101010101010c01010101010c010101010101010101010c0101010101010101010104`, img`
2222222222222222222222222222222222222222222222222222222222222
2...........2.....2.....2.....2.....2.....2.....2.....2.....2
2...........2.....2.....2.....2.....2.....2.....2.....2.....2
2...........2.....2.....2.....2.....2.....2.....2.....2.....2
2...........2.....2.....2.....2.....2.....2.....2.....2.....2
2...........2.....2.....2.....2.....2.....2.....2.....2.....2
2...........222.22222.22222.22222.22222.22222.22222.22222.222
2...........2...............................................2
2...........2...............................................2
2...........2...............................................2
2...........2...2222.....................2222...222222222...2
2...........2...2...........................2...2.......2...2
2...........2...2...........................2...2.......2...2
2...........2...2...........................2...2.......2...2
2...........2...................................2.......2...2
2.......................................................2...2
2.......................................................2...2
2.......................................................2...2
2...........2...................................2.......2...2
2...........2...2...........................2...2.......2...2
2...........2...2...........................2...2.......2...2
2...........2...2...........................2...2.......2...2
2...........2...2222.....................2222...222222222...2
2...........2...............................................2
2...........2...............................................2
2...........2...............................................2
2...........222222222...22222222222.2222222..222222222..22222
2...........2...................2.....2..........2..........2
2...........2...................2.....2..........2..........2
2...........2...................2.....2..........2..........2
2...........2...................2.....2..........2..........2
2222222222222222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,myTiles.tile9,myTiles.tile13,myTiles.tile16,myTiles.tile17,myTiles.tile20,myTiles.tile21,myTiles.tile7,myTiles.tile8,sprites.castle.tileGrass1,myTiles.tile10,myTiles.tile11,myTiles.tile12,myTiles.tile15,myTiles.tile6,myTiles.tile23,sprites.dungeon.darkGroundNorthWest1,sprites.dungeon.floorLight4,sprites.castle.tileGrass3,sprites.castle.tileGrass2,sprites.dungeon.floorLightMoss,sprites.dungeon.floorLight5,sprites.dungeon.floorLight1,myTiles.tile25,myTiles.tile26,myTiles.tile27,myTiles.tile28,myTiles.tile29,myTiles.tile31,myTiles.tile30,myTiles.tile32,myTiles.tile33,myTiles.tile34,myTiles.tile35,myTiles.tile36], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile3":
            case "tile5":return tile5;
            case "myTile4":
            case "tile6":return tile6;
            case "myTile5":
            case "tile7":return tile7;
            case "myTile6":
            case "tile8":return tile8;
            case "myTile7":
            case "tile9":return tile9;
            case "myTile1":
            case "tile1":return tile1;
            case "myTile2":
            case "tile3":return tile3;
            case "myTile8":
            case "tile4":return tile4;
            case "myTile15":
            case "tile16":return tile16;
            case "myTile16":
            case "tile17":return tile17;
            case "myTile12":
            case "tile13":return tile13;
            case "myTile17":
            case "tile18":return tile18;
            case "myTile18":
            case "tile19":return tile19;
            case "myTile19":
            case "tile20":return tile20;
            case "myTile20":
            case "tile21":return tile21;
            case "myTile":
            case "tile22":return tile22;
            case "myTile9":
            case "tile10":return tile10;
            case "myTile10":
            case "tile11":return tile11;
            case "myTile11":
            case "tile12":return tile12;
            case "myTile13":
            case "tile14":return tile14;
            case "myTile14":
            case "tile15":return tile15;
            case "myTile21":
            case "tile23":return tile23;
            case "myTile22":
            case "tile24":return tile24;
            case "bed1":
            case "tile25":return tile25;
            case "myTile24":
            case "tile26":return tile26;
            case "myTile23":
            case "tile27":return tile27;
            case "myTile25":
            case "tile28":return tile28;
            case "myTile26":
            case "tile29":return tile29;
            case "myTile28":
            case "tile31":return tile31;
            case "myTile27":
            case "tile30":return tile30;
            case "myTile29":
            case "tile32":return tile32;
            case "myTile30":
            case "tile33":return tile33;
            case "myTile31":
            case "tile34":return tile34;
            case "myTile32":
            case "tile35":return tile35;
            case "myTile33":
            case "tile36":return tile36;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
